name: Test mlcbase on Windows
on: [push]
jobs:
  main_job:
    runs-on: windows-latest
    if: ${{ always() }}
    needs: [linux_success_email, linux_fail_email]
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test ConfigDict
        run: python test_scripts/test_config.py
      - name: Test Database
        run: python test_scripts/test_database.py --host ${{ secrets.DB_HOST }} --port ${{ secrets.DB_PORT }} --user ${{ secrets.DB_USERNAME }} --password ${{ secrets.DB_PASSWORD }} --database ${{ secrets.DB_NAME }} --python_version ${{ matrix.python-version }}
      - name: Test Emoji Progress Bar
        run: python test_scripts/test_progress_bar.py
      - name: Test Encryption and Decryption
        run: python test_scripts/test_encrypt.py
      - name: Test File Operations
        run: python test_scripts/test_file.py
      - name: Test Image IO
        run: python test_scripts/test_image_io.py
      - name: Test Loading
        run: python test_scripts/test_loading.py
      - name: Test OTP
        run: python test_scripts/test_otp.py
      - name: Test Remote Connect
        run: python test_scripts/test_remote_connect.py --host ${{ secrets.SERVER_HOST }} --port ${{ secrets.SERVER_PORT }} --user ${{ secrets.SERVER_USER }} --password ${{ secrets.SERVER_PASSWORD }} --root_path ${{ secrets.SERVER_ROOT }} --python_version ${{ matrix.python-version }}
      - name: Test HashiCorp Vault
        run: python test_scripts/test_vault.py --host ${{ secrets.VAULT_HOST }} --user ${{ secrets.VAULT_USERNAME }} --password ${{ secrets.VAULT_PASSWORD }} --python_version ${{ matrix.python-version }}

  send_success_email:
    runs-on: windows-latest
    if: ${{ success() }}
    needs: main_job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Send email
        run: python test_scripts/test_email.py --host ${{ secrets.EMAIL_HOST }} --port ${{ secrets.EMAIL_PORT }} --port_wo_ssl ${{ secrets.EMAIL_PORT_WO_SSL }} --name ${{ secrets.EMAIL_NAME }} --address ${{ secrets.EMAIL_ADDRESS }} --password ${{ secrets.EMAIL_PASSWORD }} --receiver_name "${{ secrets.EMAIL_REC_NAME }}" --receiver_email ${{ secrets.EMAIL_REC_ADDRESS }} --job_status success
  
  send_fail_email:
    runs-on: windows-latest
    if: ${{ failure() }}
    needs: main_job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Send email
        run: python test_scripts/test_email.py --host ${{ secrets.EMAIL_HOST }} --port ${{ secrets.EMAIL_PORT }} --port_wo_ssl ${{ secrets.EMAIL_PORT_WO_SSL }} --name ${{ secrets.EMAIL_NAME }} --address ${{ secrets.EMAIL_ADDRESS }} --password ${{ secrets.EMAIL_PASSWORD }} --receiver_name "${{ secrets.EMAIL_REC_NAME }}" --receiver_email ${{ secrets.EMAIL_REC_ADDRESS }} --job_status fail
